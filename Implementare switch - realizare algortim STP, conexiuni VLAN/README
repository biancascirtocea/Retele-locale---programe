1 2 3

Tema 1 - Scirtocea Bianca-Ioana 331CB

#Task  1 - Tabela de comutare
In cadrul acestui task, am implementat pas cu pas pseudocodul din enunt, la care am adaugat functia de is_unicast. Aceasta functie imparte adresa mac in bucati in functie de unde este pozitionat ':', pe urma ia cel mai semnificativ byte in format int si verifica daca era setat cu 0 si atunci este unicast.
Astfel, in cadrul functiei main, in while, se verfica initial daca adresa mac este unicast, dupa verificam daca adresa mac de destinatie se afla deja in tabela mac. Daca, trece ambele if-uri atunci o sa se verifice printr-o functie auxiliara tipul de vlan (implementata pentru taskul 2). In cazul in care, adresa mac nu trece unul dintre teste,  atunci trebuie parcurse toate interfetele (cu exceptia celei initiale) si trimite pachete catre ele (tot prin intermediul functiei auziliare de la taskul doi).

#Task 2 - VLAN
Pentru acest task, am implementat mai multe functii cum ar fi send_from_trunk, send_from_access, read_config_switch, get_vlan_id si delete_vlan_tag. Toate acestea au fost introduse in codul anterior facut pentru taskul unu. Initial am verificat daca portul este de tip trunk sau access si apoi apeleaza functiile implementate in functie de caz. Functia de delete_vlan_tag, sterge tag-ul vlan din pachetul primit, iar functia de get_vlan_id, returneaza id-ul vlan-ului din pachetul primit, printr-o conversie la int. Functia de send_from_access verifica ce tip este destinatia si adauga tagul de vlan daca este access to trunk si trimite mai departe cu functia send_to_link. (aceasta a fost actualizata la taskul 3 - a trebuit sa verific daca portul este de tip blocked). La fel a fost facuta si functia  send_from_trunk, numai ca tagul se adauga pentru trunk to trunk. Pentru taskul trei, aceasta tot a trebuit fi putin modificata cu testul portului de tip blocked. Functia read_config_switch parseaza fisierul cu informatiile stiute de switch si le extrage pentru a putea fi folosite mai departe.

#Task 3 - STP
Pentru acest task, a trebuit sa modific cateva lucruri mentionate mai sus la taskul 2, sa parcurg pseudocodul dat in enuntul temei si sa il implementez pas cu pas [in unele parti aproape identic, tinand cont de tipul de port (blocked, designated si listening)] si sa implementez o structura pentru pachetul de BDPU cu toate informatiile necesare. De asemenea, am creat o functie care creeaza paachetul de bdpu exact cum scrie in enuntul temei, o functie care trimite pachete BDPU in fiecare secunda (daca portul este root se trimit pachete tuturor celorlate porturi de tip trunk). Astfel, initial se verifica daca avem cadru BDPU, dupa adresa mac specifica. Iar, daca este cazul, incepem taskul trei prin extragerea informatiilor necesare pentru crearea pachetului BDPU. In cadrul acestui task, am intampinat cele mai multe erori. Cu toate ca pseudocodul a fost destul de detaliat si nu a trebuit sa ma abat de la el, tot am intampinat acele erori.
